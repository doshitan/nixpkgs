#! /usr/bin/env nix-shell
#! nix-shell -i python -p python -p nix-prefetch-git

import datetime
import json
import os
import subprocess


def get_fetchgit_config(repo, ref):
    repo_url = "https://github.com/phacility/" + repo + ".git"
    prefetch_output = subprocess.check_output(["nix-prefetch-git", repo_url, ref])
    config = json.loads("\n".join(prefetch_output.splitlines()[-6:]))
    return config


def write_fetchgit_config(config, out):
    out.write("  src = fetchgit {\n")
    out.write("    url = \"%s\";\n" % config["url"])
    out.write("    rev = \"%s\";\n" % config["rev"])
    out.write("    sha256 = \"%s\";\n" % config["sha256"])
    out.write("  };\n")


def write_fetchgit_config_project(repo, ref, out):
    config = get_fetchgit_config(repo, ref)
    write_fetchgit_config(config, out)


ref = "refs/heads/stable"


#
# Arcanist
#
out = open("arcanist/default.nix", "w")
out.write("# This file is autogenerated! Do not edit it yourself, use ../update.py for regeneration.\n")
out.write("""{ stdenv, bash, fetchgit, libphutil, makeWrapper, php }:

stdenv.mkDerivation rec {
  name = "arcanist-${version}";
""")
out.write("  version = \"%s\";\n\n" % datetime.date.today())

write_fetchgit_config_project("arcanist", ref, out)

out.write("""
  buildInputs = [ bash php libphutil makeWrapper ];

  unpackPhase = "true";
  buildPhase = ''
    cp -R $src arcanist
    chmod +w -R arcanist
  '';
  installPhase = ''
    mkdir -p $out/bin $out/libexec
    cp -R arcanist  $out/libexec/arcanist
    ln -s ${libphutil}/libexec/libphutil $out/libexec/libphutil

    ln -s $out/libexec/arcanist/bin/arc $out/bin
    wrapProgram $out/bin/arc \
      --prefix PATH : "${php}/bin"

    # makeWrapper ${php}/bin/php $out/bin/arc \
    #   --add-flags "-d include_path=${libphutil}/libexec -f $out/libexec/arcanist/scripts/arcanist.php"

    # chmod +x $out/bin/arc
  '';

  meta = {
    description = "Command line interface to Phabricator";
    homepage    = "http://phabricator.org";
    license     = stdenv.lib.licenses.asl20;
    platforms   = stdenv.lib.platforms.unix;
  };
}
""")


#
# Libphutil
#
out = open("libphutil/default.nix", "w");
out.write("# This file is autogenerated! Do not edit it yourself, use ../update.py for regeneration.\n")
out.write("""{ stdenv, fetchgit, flex, makeWrapper, php }:

stdenv.mkDerivation rec {
  name = "libphutil-${version}";
""")
out.write("  version = \"%s\";\n\n" % datetime.date.today())

write_fetchgit_config_project("libphutil", ref, out)

out.write("""
  buildInputs = [ php makeWrapper flex ];

  unpackPhase = "true";
  buildPhase = ''
    ORIG=`pwd`
    cp -R $src libphutil
    chmod +w -R libphutil
    cd libphutil/support/xhpast
    make clean all install
    cd $ORIG
  '';
  installPhase = ''
    mkdir -p $out/libexec
    cp -R libphutil $out/libexec/libphutil
  '';

  meta = {
    description = "Utility library for Phabricator";
    homepage    = "http://phabricator.org";
    license     = stdenv.lib.licenses.asl20;
    platforms   = stdenv.lib.platforms.unix;
  };
}
""")


#
# Phabricator
#
out = open("phabricator/default.nix", "w");
out.write("# This file is autogenerated! Do not edit it yourself, use ../update.py for regeneration.\n")
out.write("""{ stdenv, fetchgit, arcanist, libphutil, php }:

stdenv.mkDerivation rec {
  name = "phabricator-${version}";
""")
out.write("  version = \"%s\";\n\n" % datetime.date.today())

write_fetchgit_config_project("phabricator", ref, out)

out.write("""
  buildInputs = [ php arcanist libphutil ];

  patches = [ ./conf.patch ];

  installPhase = ''
    mkdir -p $out/libexec
    cp -R . $out/libexec/phabricator
    ln -s ${libphutil}/libexec/libphutil $out/libexec/libphutil
    ln -s ${arcanist}/libexec/arcanist $out/libexec/arcanist
  '';

  meta = {
    description = "A collection of web applications which help software companies build better software";
    homepage    = "http://phabricator.org";
    license     = stdenv.lib.licenses.asl20;
    platforms   = stdenv.lib.platforms.unix;
  };
}
""")
